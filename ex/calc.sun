extend Char {
  public fn isMathSymbol() -> bool { return self == '+' || self == '-' || self == '*' || self == '%' || self == '/'; }
}

#[entry]
public fn calc() -> Unit {
  var a: u32 = 0;
  var b: u32 = 0;
  var op: char = '\0';

  {
    a = prompt("Please input a number.\n> ").strip().parseInt();
    b = prompt("Please input a number.\n> ").strip().parseInt();
  } catch(IllegalArgument e) { retry; }

  op = prompt("Please input an arithmetic symbol: + - * % /\n> ").strip().truncate(1)[0];

  if(op.isMathSymbol()) {
    match op {
      '+' -> println(a + b);
      '-' -> println(a - b);
      '*' -> println(a * b);
      '%' -> {
        if(b == 0) { println("Denominator cannot be zero"); }
        else { println(a % b); } // integer modulo
      }
      '/' -> {
        if(b == 0) { println("Denominator cannot be zero"); }
        else { println(a / b); } // integer division
      }
      _ -> panic new IllegalArgument("Invalid Arithmetic Operation");
    }
  } else { println("Symbol is not a valid math symbol."); }
}